#!/usr/bin/env python
import rospy
import math
from sensor_msgs.msg import Joy

# Joystick/gamepad axis map
AXIS_X0 = 0
AXIS_X1 = 1
BUTTON = 0

class OperatorNode:

    def __init__(self):

        # Setup
        self.max_velocity = float(rospy.get_param('~max_velocity'))

        # Create publisher and subscriber
        self.pub = rospy.Publisher('operator_signal', Joy, queue_size=10)
        rospy.Subscriber('operator_signal/raw', Joy, self.remapJoyToOperatorSignal)

    def axesSignalFromMsg(self, msg):
        hr0 = msg.axes[AXIS_X0]
        hr1 = msg.axes[AXIS_X1]
        htheta = math.atan2(hr1, hr0)
        hscale = self.max_velocity * min(math.sqrt(hr0**2 + hr1**2), 1.0)
        return [hscale * math.cos(htheta), hscale * math.sin(htheta)]

    def buttonSignalFromMsg(self, msg):
        return [msg.buttons[BUTTON]]

    def publishOperatorSignal(self, axes_signal, button_signal):
        msg = Joy()
        msg.header.stamp = rospy.Time.now()
        msg.axes = operator_signal
        msg.buttons = button_signal
        self.pub.publish(msg)

    def remapJoyToOperatorSignal(self, msgin):
        """Listens for Joy messages and publishes operator signals."""
        self.publishOperatorSignal(
            self.axesSignalFromMsg(msg),
            self.buttonSignalFromMsg(msg)
        )

if __name__=='__main__':
    rospy.init_node('operator_node', anonymous=True)
    OperatorNode()
    rospy.spin()
